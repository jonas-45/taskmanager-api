<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Task Manager Dashboard</title>
  <link href="https://unpkg.com/lucide-static/font/lucide.css" rel="stylesheet">
  <link href="dashboard.css" rel="stylesheet">
</head>
<body>
  
  <div class="container">
    <h1>My Task Manager 1.0</h1>

    <!-- Add Task Form -->
    <form id="taskForm">
      <input type="text" id="taskName" placeholder="Task title" required /><br>
      <select id="taskPriority" required>
        <option value="">Priority</option>
        <option value="low">Low</option>
        <option value="medium">Medium</option>
        <option value="high">High</option>
      </select><br>
      <input type="date" id="dueDate" required /><br>
      <textarea id="taskDescription" placeholder="Task description..." rows="2" required></textarea><br>

      <button type="submit">Add Task</button>
    </form>

    <!-- Task List -->
    <div id="taskList">
      <h1>My Tasks List</h1>

      <table id="taskTable">
        <thead>
          <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Priority</th>
            <th>Due Date</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="taskTableBody">
          <!-- tasks will be dynamically loaded here -->
        </tbody>
      </table>
    </div>
  </div>

  <script>
    const taskForm = document.getElementById("taskForm");
    taskForm.addEventListener("submit", (e) => {
      e.preventDefault();

      const newTask = {
        title: document.getElementById("taskName").value,
        description: document.getElementById("taskDescription").value,
        priorty: document.getElementById("taskPriority").value,
        duedate: document.getElementById("dueDate").value
      }

      fetch('/add', {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer " + localStorage.getItem("token")
        },
        body: JSON.stringify(newTask)
    })
      .then((response) => {
        if(!response.ok) {
          window.location.href = "/login";
          return;
        }

        return response.json();
      })
      .then((data) => {
        if(data.success) {
          alert(data.message);
          return;
        }
        alert(data.message + " : what error?")
      })
      .catch(err => alert("Error: " + err))
    });


    //display tasks
    window.addEventListener('load', async () => {
      const token = localStorage.getItem("token");
      console.log(`token is: ${token}`);
      if(!token){
        window.location.href = "/login";
        return;
      }

      const data = await loadTask(token);
      const tableBody = document.getElementById("taskTableBody");

      if(!data.success || data.tasks.length === 0) {
        tableBody.innerHTML = `<tr><td colspan="5" style="text-align:center;">No tasks found</td></tr>`;
        return;
      }

      data.tasks.forEach((task) => {
        const row = document.createElement("tr");

        const priortyClass = 
        task.priorty == "high" ? "priority-high" : 
        task.priorty == "medium" ? "priority-medium" : "priority-low";

          row.innerHTML = `
            <td>${task.title}</td>
            <td>${task.description}</td>
            <td class="${priortyClass}">${task.priorty}</td>
            <td>${new Date(task.duedate).toLocaleDateString()}</td>
            <td class="actions">
              <button>Edit</button>
              <button>Mark completed</button>
              <button class="delete">Delete</button>
            </td>
          `

          tableBody.appendChild(row);
        })

    })

    //load task function
    const loadTask = async (token) => {
      try{
        const res = await fetch("/tasks", {
          method: "GET",
          headers: {
            "Authorization": "Bearer " + token
          }
        });

        if(!res.ok) {
          window.location.href = "/login";
          return;
        }
        const results = await res.json();

        console.log(results);
        return results;

      }catch(error) {
        console.log(error);
      }
    
    }

  </script>

</body>
</html>
